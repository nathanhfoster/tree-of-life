[{"/Users/nathanfoster/repos/tree-of-life/src/index.js":"1","/Users/nathanfoster/repos/tree-of-life/src/serviceWorker.js":"2","/Users/nathanfoster/repos/tree-of-life/src/App.js":"3","/Users/nathanfoster/repos/tree-of-life/src/Views/index.js":"4","/Users/nathanfoster/repos/tree-of-life/src/Views/Home/index.js":"5","/Users/nathanfoster/repos/tree-of-life/src/views/index.js":"6","/Users/nathanfoster/repos/tree-of-life/src/views/Home/index.js":"7","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/index.js":"8","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/reducer.js":"9","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/types.js":"10","/Users/nathanfoster/repos/tree-of-life/src/store/index.js":"11","/Users/nathanfoster/repos/tree-of-life/src/store/provider/connect.js":"12","/Users/nathanfoster/repos/tree-of-life/src/store/provider/index.js":"13","/Users/nathanfoster/repos/tree-of-life/src/store/hooks/index.js":"14","/Users/nathanfoster/repos/tree-of-life/src/store/utils/index.js":"15","/Users/nathanfoster/repos/tree-of-life/src/store/utils/actionTypes.js":"16","/Users/nathanfoster/repos/tree-of-life/src/store/utils/shallowEquals.js":"17","/Users/nathanfoster/repos/tree-of-life/src/store/utils/isPlainObject.js":"18","/Users/nathanfoster/repos/tree-of-life/src/store/utils/combineReducers.js":"19","/Users/nathanfoster/repos/tree-of-life/src/components/index.js":"20","/Users/nathanfoster/repos/tree-of-life/src/components/Footer/index.js":"21","/Users/nathanfoster/repos/tree-of-life/src/components/TileMap/index.js":"22","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/TileMap/reducer.js":"23","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/TileMap/types.js":"24","/Users/nathanfoster/repos/tree-of-life/src/components/TileMap/Tile/index.js":"25","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/actions.js":"26","/Users/nathanfoster/repos/tree-of-life/src/store/Persistor/index.js":"27","/Users/nathanfoster/repos/tree-of-life/src/components/LoadingScreen/index.js":"28"},{"size":915,"mtime":1609916246678,"results":"29","hashOfConfig":"30"},{"size":5141,"mtime":1608956978800,"results":"31","hashOfConfig":"30"},{"size":363,"mtime":1609916047688,"results":"32","hashOfConfig":"30"},{"size":40,"mtime":1608957514683,"results":"33","hashOfConfig":"30"},{"size":96,"mtime":1608957484374,"results":"34","hashOfConfig":"30"},{"size":40,"mtime":1608957514683,"results":"35","hashOfConfig":"30"},{"size":96,"mtime":1608957484374,"results":"36","hashOfConfig":"30"},{"size":105,"mtime":1609308597121,"results":"37","hashOfConfig":"30"},{"size":531,"mtime":1609914289998,"results":"38","hashOfConfig":"30"},{"size":160,"mtime":1609914319500,"results":"39","hashOfConfig":"30"},{"size":340,"mtime":1609915359825,"results":"40","hashOfConfig":"30"},{"size":2896,"mtime":1609914783406,"results":"41","hashOfConfig":"30"},{"size":2354,"mtime":1601047075264,"results":"42","hashOfConfig":"30"},{"size":1309,"mtime":1609914785065,"results":"43","hashOfConfig":"30"},{"size":879,"mtime":1600710757794,"results":"44","hashOfConfig":"30"},{"size":567,"mtime":1600710755237,"results":"45","hashOfConfig":"30"},{"size":378,"mtime":1600710759496,"results":"46","hashOfConfig":"30"},{"size":392,"mtime":1600710758511,"results":"47","hashOfConfig":"30"},{"size":2473,"mtime":1600710756956,"results":"48","hashOfConfig":"30"},{"size":151,"mtime":1609915496128,"results":"49","hashOfConfig":"30"},{"size":316,"mtime":1609309245787,"results":"50","hashOfConfig":"30"},{"size":606,"mtime":1609309335705,"results":"51","hashOfConfig":"30"},{"size":500,"mtime":1609916341859,"results":"52","hashOfConfig":"30"},{"size":37,"mtime":1609308570191,"results":"53","hashOfConfig":"30"},{"size":263,"mtime":1609309742992,"results":"54","hashOfConfig":"30"},{"size":659,"mtime":1609914882468,"results":"55","hashOfConfig":"30"},{"size":1854,"mtime":1609915380716,"results":"56","hashOfConfig":"30"},{"size":30860,"mtime":1609915477788,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mm1m0f",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/nathanfoster/repos/tree-of-life/src/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/serviceWorker.js",[],["122","123"],"/Users/nathanfoster/repos/tree-of-life/src/App.js",["124","125"],"/Users/nathanfoster/repos/tree-of-life/src/Views/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/Views/Home/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/views/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/views/Home/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/reducers/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/reducer.js",["126"],"import { AppActionTypes } from './types'\n\nconst DEFAULT_STATE_APP = {\n  version: new Number(1).toFixed(3),\n}\n\nconst App = (state = DEFAULT_STATE_APP, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case AppActionTypes.APP_SET_VERSION:\n      return { ...state, version: payload.toFixed(3) }\n\n    case AppActionTypes.REDUX_RESET:\n      return state\n\n    // case AppActionTypes.LOAD_PERSISTED_STATE:\n    //   return payload?.App || state\n\n    default:\n      return state\n  }\n}\n\nexport { DEFAULT_STATE_APP, App }\n","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/types.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/provider/connect.js",["127","128","129"],"import React, { useState, useLayoutEffect, useMemo } from 'react'\nimport { usePreviousValue, useContext } from '../hooks'\nimport { ContextConsumer } from './'\nimport { shallowEquals } from '../utils'\n\nconst bindActionCreator = (actionCreator, dispatch, state) => {\n  const getState = () => state\n  // Closure function\n  function boundAction() {\n    try {\n      return actionCreator.apply(this, arguments)(dispatch, getState)\n    } catch {\n      return dispatch(actionCreator.apply(this, arguments))\n    } finally {\n    }\n  }\n\n  return boundAction\n}\n\nconst bindActionCreators = (actionCreators, dispatch, state) => {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch, state)\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\n      `bindActionCreators expected an object or a function, instead received ${\n        actionCreators === null ? 'null' : typeof actionCreators\n      }.`,\n    )\n  }\n\n  let boundActionCreators = {}\n\n  for (const key in actionCreators) {\n    const action = actionCreators[key]\n    if (typeof action === 'function') {\n      boundActionCreators[key] = bindActionCreator(action, dispatch, state)\n    }\n  }\n\n  return boundActionCreators\n}\n\nconst getMapStateToProps = (mapStateToProps, state, ownProps) =>\n  mapStateToProps ? mapStateToProps(state, ownProps) : null\n\nconst connect = (mapStateToProps, mapDispatchToProps) => Component => ownProps => {\n  const { state, dispatch } = useContext(ContextConsumer)\n\n  // Memoize stateToProps\n  const [stateToProps, setStateProps] = useState(\n    getMapStateToProps(mapStateToProps, state, ownProps),\n  )\n\n  const prevStateToProps = usePreviousValue(stateToProps)\n\n  // Check if Component should rerender\n  useLayoutEffect(() => {\n    if (prevStateToProps) {\n      const nextStateToProps = getMapStateToProps(mapStateToProps, state, ownProps)\n      if (!shallowEquals(prevStateToProps, nextStateToProps)) {\n        setStateProps(nextStateToProps)\n      }\n    }\n  }, [state])\n\n  // Memoize globalDispatch\n  const dispatchToProps = useMemo(\n    () =>\n      !mapDispatchToProps\n        ? null\n        : mapDispatchToProps instanceof Function || typeof mapDispatchToProps === 'function'\n        ? mapDispatchToProps(dispatch, ownProps)\n        : bindActionCreators(mapDispatchToProps, dispatch, state),\n    [stateToProps],\n  )\n\n  // Memoize the Component's combined props\n  const renderComponent = useMemo(() => {\n    const combinedComponentProps = {\n      ...stateToProps,\n      ...ownProps,\n      // not all components need to dispatch actions so its optional\n      ...(mapDispatchToProps && {\n        ...dispatchToProps,\n      }),\n    }\n    // Pass all the key value combinedComponentProps to Component\n    return <Component {...combinedComponentProps} />\n  }, [stateToProps, ownProps])\n\n  return renderComponent\n}\n\nexport default connect\n","/Users/nathanfoster/repos/tree-of-life/src/store/provider/index.js",["130"],"import React, { createContext, useMemo, useReducer, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { combineReducers, isAFunction } from '../utils'\n\nconst storeFactory = () => ({\n  isReady: false,\n  dispatch: () => {\n    console.error('Store is NOT ready!')\n  },\n  getState: () => {\n    console.error('Store is NOT ready!')\n  },\n})\n\nconst StateProvider = createContext({})\n\nconst defaultInitializer = state => state\n\nconst store = storeFactory()\n\n// This allows actions to dispatch other actions and pass (dispatch, getState)\nconst augmentDispatch = (dispatch, state) => input => {\n  const getState = () => state\n  return isAFunction(input) ? input(dispatch, getState) : dispatch(input)\n}\n\nconst ContextProvider = ({ reducers, initialState, initializer, children }) => {\n  // call the function to get initial state and global reducer\n  const [mainState, mainReducer] = useMemo(() => combineReducers(reducers, initialState), [\n    reducers,\n    initialState,\n  ])\n\n  // setup useReducer with the returned values of the combineReducers\n  const [state, dispatch] = useReducer(mainReducer, mainState, initializer)\n\n  const augmentedDispatch = useMemo(() => augmentDispatch(dispatch, state), [state])\n\n  // Update store object to potentially access it outside of a component\n  useEffect(() => {\n    if (!store.isReady) {\n      store.isReady = true\n      store.dispatch = augmentedDispatch\n      store.getState = () => state\n      // Object.freeze(store) // don't freeze the object, or store.isReady can't be re-assigned\n    }\n    return () => {\n      store.isReady = false\n    }\n  }, [augmentedDispatch])\n\n   // make our context object value\n  const contextValue = useMemo(() => ({ state, dispatch: augmentedDispatch }), [\n    state,\n    augmentedDispatch,\n  ])\n\n  return <StateProvider.Provider value={contextValue}>{children}</StateProvider.Provider>\n}\n\nContextProvider.propTypes = {\n  reducers: PropTypes.oneOfType([PropTypes.objectOf(PropTypes.func.isRequired), PropTypes.func])\n    .isRequired,\n  initialState: PropTypes.object,\n  initializer: PropTypes.func,\n  persistKey: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n}\n\nContextProvider.defaultProps = {\n  initializer: defaultInitializer,\n}\n\nexport { ContextProvider, StateProvider as ContextConsumer, store, storeFactory }\n","/Users/nathanfoster/repos/tree-of-life/src/store/hooks/index.js",["131"],"import {\n  useContext as reactUseContext,\n  useState,\n  useRef,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport { ContextConsumer } from '../provider'\nimport { shallowEquals } from '../utils'\n\nexport const useContext = (context = ContextConsumer) => reactUseContext(context)\n\nexport const usePreviousValue = value => {\n  let ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport const defaultIsEqual = (nextSelector, previousSelector) =>\n  shallowEquals(previousSelector, nextSelector)\n\nexport const useSelector = (\n  mapStateToSelector,\n  isEqual = defaultIsEqual,\n  context = ContextConsumer,\n) => {\n  const { state } = useContext(context)\n\n  const [selector, setSelector] = useState(mapStateToSelector(state))\n\n  const previousSelector = usePreviousValue(selector)\n\n  useLayoutEffect(() => {\n    if (previousSelector) {\n      const nextSelector = mapStateToSelector(state)\n      const shouldUpdate = !isEqual(nextSelector, previousSelector)\n      if (shouldUpdate) {\n        setSelector(nextSelector)\n      }\n    }\n  }, [state])\n\n  return selector\n}\n\nexport const useDispatch = (context = ContextConsumer) => {\n  const { dispatch } = useContext(context)\n  const memoizedDispatch = useMemo(() => dispatch, [dispatch])\n\n  return memoizedDispatch\n}\n","/Users/nathanfoster/repos/tree-of-life/src/store/utils/index.js",["132","133"],"import actionTypes from './actionTypes'\nimport { combineReducers } from './combineReducers'\nimport isPlainObject from './isPlainObject'\nimport shallowEquals from './shallowEquals'\n\nconst isAFunction = object => object instanceof Function || typeof object === 'function'\n\nconst isQuotaExceeded = e => {\n  let quotaExceeded = false\n  if (e) {\n    if (e.code) {\n      switch (e.code) {\n        case 22:\n          quotaExceeded = true\n          break\n        case 1014:\n          // Firefox\n          if (e.name == 'NS_ERROR_DOM_QUOTA_REACHED') {\n            quotaExceeded = true\n          }\n          break\n        default:\n          break\n      }\n    } else if (e.number == -2147024882) {\n      // Internet Explorer 8\n      quotaExceeded = true\n    }\n  }\n  return quotaExceeded\n}\n\nexport { actionTypes, combineReducers, isPlainObject, isAFunction, isQuotaExceeded, shallowEquals }\n","/Users/nathanfoster/repos/tree-of-life/src/store/utils/actionTypes.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/utils/shallowEquals.js",["134"],"const shallowEquals = (a, b) => {\n  if (a === b) return true\n  if (!(a || b)) return true\n  // if ((!a && b) || (!b && a)) return false;\n\n  for (var key in a) {\n    if (!(key in b) || a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  for (var key in b) {\n    if (!(key in a) || a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport default shallowEquals\n","/Users/nathanfoster/repos/tree-of-life/src/store/utils/isPlainObject.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/utils/combineReducers.js",[],"/Users/nathanfoster/repos/tree-of-life/src/components/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/components/Footer/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/components/TileMap/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/reducers/TileMap/reducer.js",["135"],"/Users/nathanfoster/repos/tree-of-life/src/store/reducers/TileMap/types.js",[],"/Users/nathanfoster/repos/tree-of-life/src/components/TileMap/Tile/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/actions.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/Persistor/index.js",["136"],"import { useLayoutEffect, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport localforage from 'localforage'\nimport { connect } from 'store'\nimport { LoadReducerState } from 'store/reducers/App/actions'\nimport { usePreviousValue } from 'store/hooks'\n\nexport const DATEBASE_SIZE = 5000 * 1024 * 1024\n\nexport const INDEX_DB_KEY = 'TreeOfLifeDB'\n\nexport const TreeOfLifeDB = localforage.createInstance({\n  driver: localforage.WEBSQL, // Force WebSQL; same as using setDriver()\n  name: INDEX_DB_KEY,\n  version: 1.0,\n  size: DATEBASE_SIZE, // Size of database, in bytes. WebSQL-only for now.\n  storeName: 'keyvaluepairs', // Should be alphanumeric, with underscores.\n  description: 'Astral Tree local database',\n})\n\nconst mapStateToProps = state => ({ state })\n\nconst mapDispatchToProps = { LoadReducerState }\n\nconst Persistor = ({ debounce, whenQuotaExceeds, state, LoadReducerState }) => {\n  console.log(state)\n  const prevState = usePreviousValue(state)\n\n  useLayoutEffect(() => {\n    ;(async () => {\n      const persistedSate = await TreeOfLifeDB.getItem(INDEX_DB_KEY).then(s => JSON.parse(s))\n      LoadReducerState(persistedSate)\n    })()\n  }, [])\n\n  useEffect(() => {\n    const persistDebounce = setTimeout(() => {\n      try {\n        TreeOfLifeDB.setItem(INDEX_DB_KEY, JSON.stringify(state))\n      } catch (e) {\n        console.log(e)\n      }\n    }, debounce)\n\n    return () => {\n      clearTimeout(persistDebounce)\n      // TreeOfLifeDB.clear()\n    }\n  }, [state, prevState, debounce, whenQuotaExceeds])\n\n  return null\n}\n\nPersistor.propTypes = {\n  debounce: PropTypes.number.isRequired,\n  whenQuotaExceeds: PropTypes.func,\n  state: PropTypes.objectOf(PropTypes.object),\n  LoadReducerState: PropTypes.func.isRequired,\n}\n\nPersistor.defaultProps = { debounce: 400 }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persistor)\n","/Users/nathanfoster/repos/tree-of-life/src/components/LoadingScreen/index.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":6,"column":14,"nodeType":"143","messageId":"144","endLine":6,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":16,"column":26,"nodeType":"143","messageId":"144","endLine":16,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":4,"column":12,"nodeType":"147","messageId":"148","endLine":4,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":67,"column":6,"nodeType":"151","endLine":67,"endColumn":13,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":77,"column":5,"nodeType":"151","endLine":77,"endColumn":19,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"155","line":92,"column":6,"nodeType":"151","endLine":92,"endColumn":30,"suggestions":"156"},{"ruleId":"149","severity":1,"message":"157","line":50,"column":6,"nodeType":"151","endLine":50,"endColumn":25,"suggestions":"158"},{"ruleId":"149","severity":1,"message":"159","line":46,"column":6,"nodeType":"151","endLine":46,"endColumn":13,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":18,"column":22,"nodeType":"163","messageId":"144","endLine":18,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":25,"column":25,"nodeType":"163","messageId":"144","endLine":25,"endColumn":27},{"ruleId":"164","severity":1,"message":"165","line":12,"column":12,"nodeType":"166","messageId":"167","endLine":12,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":2,"column":10,"nodeType":"166","messageId":"170","endLine":2,"endColumn":28},{"ruleId":"149","severity":1,"message":"171","line":34,"column":6,"nodeType":"151","endLine":34,"endColumn":8,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'ownProps' and 'prevStateToProps'. Either include them or remove the dependency array.","ArrayExpression",["175"],"React Hook useMemo has missing dependencies: 'dispatch', 'ownProps', and 'state'. Either include them or remove the dependency array.",["176"],"React Hook useMemo has a missing dependency: 'dispatchToProps'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["178"],"React Hook useLayoutEffect has missing dependencies: 'isEqual', 'mapStateToSelector', and 'previousSelector'. Either include them or remove the dependency array. If 'mapStateToSelector' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-redeclare","'key' is already defined.","Identifier","redeclared","no-unused-vars","'TileMapActionTypes' is defined but never used.","unusedVar","React Hook useLayoutEffect has a missing dependency: 'LoadReducerState'. Either include it or remove the dependency array. If 'LoadReducerState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["180"],"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [ownProps, prevStateToProps, state]",{"range":"193","text":"194"},"Update the dependencies array to be: [dispatch, ownProps, state]",{"range":"195","text":"196"},"Update the dependencies array to be: [stateToProps, ownProps, dispatchToProps]",{"range":"197","text":"198"},"Update the dependencies array to be: [augmentedDispatch, state]",{"range":"199","text":"200"},"Update the dependencies array to be: [isEqual, mapStateToSelector, previousSelector, state]",{"range":"201","text":"202"},"Update the dependencies array to be: [LoadReducerState]",{"range":"203","text":"204"},[2024,2031],"[ownProps, prevStateToProps, state]",[2361,2375],"[dispatch, ownProps, state]",[2818,2842],"[stateToProps, ownProps, dispatchToProps]",[1599,1618],"[augmentedDispatch, state]",[1083,1090],"[isEqual, mapStateToSelector, previousSelector, state]",[1160,1162],"[LoadReducerState]"]