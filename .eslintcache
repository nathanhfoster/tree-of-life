[{"/Users/nathanfoster/repos/tree-of-life/src/index.js":"1","/Users/nathanfoster/repos/tree-of-life/src/serviceWorker.js":"2","/Users/nathanfoster/repos/tree-of-life/src/App.js":"3","/Users/nathanfoster/repos/tree-of-life/src/Views/index.js":"4","/Users/nathanfoster/repos/tree-of-life/src/Views/Home/index.js":"5","/Users/nathanfoster/repos/tree-of-life/src/views/index.js":"6","/Users/nathanfoster/repos/tree-of-life/src/views/Home/index.js":"7","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/index.js":"8","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/reducer.js":"9","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/types.js":"10","/Users/nathanfoster/repos/tree-of-life/src/store/index.js":"11","/Users/nathanfoster/repos/tree-of-life/src/store/provider/connect.js":"12","/Users/nathanfoster/repos/tree-of-life/src/store/provider/index.js":"13","/Users/nathanfoster/repos/tree-of-life/src/store/hooks/index.js":"14","/Users/nathanfoster/repos/tree-of-life/src/store/utils/index.js":"15","/Users/nathanfoster/repos/tree-of-life/src/store/utils/actionTypes.js":"16","/Users/nathanfoster/repos/tree-of-life/src/store/utils/shallowEquals.js":"17","/Users/nathanfoster/repos/tree-of-life/src/store/utils/isPlainObject.js":"18","/Users/nathanfoster/repos/tree-of-life/src/store/utils/combineReducers.js":"19","/Users/nathanfoster/repos/tree-of-life/src/components/index.js":"20","/Users/nathanfoster/repos/tree-of-life/src/components/Footer/index.js":"21"},{"size":617,"mtime":1608958235839,"results":"22","hashOfConfig":"23"},{"size":5141,"mtime":1608956978800,"results":"24","hashOfConfig":"23"},{"size":335,"mtime":1608958924187,"results":"25","hashOfConfig":"23"},{"size":40,"mtime":1608957514683,"results":"26","hashOfConfig":"23"},{"size":96,"mtime":1608957484374,"results":"27","hashOfConfig":"23"},{"size":40,"mtime":1608957514683,"results":"28","hashOfConfig":"23"},{"size":96,"mtime":1608957484374,"results":"29","hashOfConfig":"23"},{"size":52,"mtime":1608958295519,"results":"30","hashOfConfig":"23"},{"size":266,"mtime":1608958367838,"results":"31","hashOfConfig":"23"},{"size":33,"mtime":1608958137814,"results":"32","hashOfConfig":"23"},{"size":276,"mtime":1600710761868,"results":"33","hashOfConfig":"23"},{"size":2886,"mtime":1601422211093,"results":"34","hashOfConfig":"23"},{"size":2354,"mtime":1601047075264,"results":"35","hashOfConfig":"23"},{"size":1299,"mtime":1601422195957,"results":"36","hashOfConfig":"23"},{"size":879,"mtime":1600710757794,"results":"37","hashOfConfig":"23"},{"size":567,"mtime":1600710755237,"results":"38","hashOfConfig":"23"},{"size":378,"mtime":1600710759496,"results":"39","hashOfConfig":"23"},{"size":392,"mtime":1600710758511,"results":"40","hashOfConfig":"23"},{"size":2473,"mtime":1600710756956,"results":"41","hashOfConfig":"23"},{"size":45,"mtime":1608958577815,"results":"42","hashOfConfig":"23"},{"size":314,"mtime":1608958902950,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"mm1m0f",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nathanfoster/repos/tree-of-life/src/index.js",[],["93","94"],"/Users/nathanfoster/repos/tree-of-life/src/serviceWorker.js",[],"/Users/nathanfoster/repos/tree-of-life/src/App.js",["95","96"],"/Users/nathanfoster/repos/tree-of-life/src/Views/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/Views/Home/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/views/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/views/Home/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/reducers/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/reducer.js",["97","98"],"import { AppActionTypes } from './types'\n\nconst DEFAULT_STATE_APP = {\n  version: 1,\n}\n\nconst App = (state = DEFAULT_STATE_APP, action) => {\n  const { type, payload } = action\n  switch (type) {\n    default:\n      return state\n  }\n}\n\nexport { DEFAULT_STATE_APP, App }\n","/Users/nathanfoster/repos/tree-of-life/src/store/reducers/App/types.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/provider/connect.js",["99","100","101"],"import React, { useState, useLayoutEffect, useMemo } from 'react'\nimport { usePrevious, useContext } from '../hooks'\nimport { ContextConsumer } from './'\nimport { shallowEquals } from '../utils'\n\nconst bindActionCreator = (actionCreator, dispatch, state) => {\n  const getState = () => state\n  // Closure function\n  function boundAction() {\n    try {\n      return actionCreator.apply(this, arguments)(dispatch, getState)\n    } catch {\n      return dispatch(actionCreator.apply(this, arguments))\n    } finally {\n    }\n  }\n\n  return boundAction\n}\n\nconst bindActionCreators = (actionCreators, dispatch, state) => {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch, state)\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\n      `bindActionCreators expected an object or a function, instead received ${\n        actionCreators === null ? 'null' : typeof actionCreators\n      }.`,\n    )\n  }\n\n  let boundActionCreators = {}\n\n  for (const key in actionCreators) {\n    const action = actionCreators[key]\n    if (typeof action === 'function') {\n      boundActionCreators[key] = bindActionCreator(action, dispatch, state)\n    }\n  }\n\n  return boundActionCreators\n}\n\nconst getMapStateToProps = (mapStateToProps, state, ownProps) =>\n  mapStateToProps ? mapStateToProps(state, ownProps) : null\n\nconst connect = (mapStateToProps, mapDispatchToProps) => Component => ownProps => {\n  const { state, dispatch } = useContext(ContextConsumer)\n\n  // Memoize stateToProps\n  const [stateToProps, setStateProps] = useState(\n    getMapStateToProps(mapStateToProps, state, ownProps),\n  )\n\n  const prevStateToProps = usePrevious(stateToProps)\n\n  // Check if Component should rerender\n  useLayoutEffect(() => {\n    if (prevStateToProps) {\n      const nextStateToProps = getMapStateToProps(mapStateToProps, state, ownProps)\n      if (!shallowEquals(prevStateToProps, nextStateToProps)) {\n        setStateProps(nextStateToProps)\n      }\n    }\n  }, [state])\n\n  // Memoize globalDispatch\n  const dispatchToProps = useMemo(\n    () =>\n      !mapDispatchToProps\n        ? null\n        : mapDispatchToProps instanceof Function || typeof mapDispatchToProps === 'function'\n        ? mapDispatchToProps(dispatch, ownProps)\n        : bindActionCreators(mapDispatchToProps, dispatch, state),\n    [stateToProps],\n  )\n\n  // Memoize the Component's combined props\n  const renderComponent = useMemo(() => {\n    const combinedComponentProps = {\n      ...stateToProps,\n      ...ownProps,\n      // not all components need to dispatch actions so its optional\n      ...(mapDispatchToProps && {\n        ...dispatchToProps,\n      }),\n    }\n    // Pass all the key value combinedComponentProps to Component\n    return <Component {...combinedComponentProps} />\n  }, [stateToProps, ownProps])\n\n  return renderComponent\n}\n\nexport default connect\n","/Users/nathanfoster/repos/tree-of-life/src/store/provider/index.js",["102"],"import React, { createContext, useMemo, useReducer, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { combineReducers, isAFunction } from '../utils'\n\nconst storeFactory = () => ({\n  isReady: false,\n  dispatch: () => {\n    console.error('Store is NOT ready!')\n  },\n  getState: () => {\n    console.error('Store is NOT ready!')\n  },\n})\n\nconst StateProvider = createContext({})\n\nconst defaultInitializer = state => state\n\nconst store = storeFactory()\n\n// This allows actions to dispatch other actions and pass (dispatch, getState)\nconst augmentDispatch = (dispatch, state) => input => {\n  const getState = () => state\n  return isAFunction(input) ? input(dispatch, getState) : dispatch(input)\n}\n\nconst ContextProvider = ({ reducers, initialState, initializer, children }) => {\n  // call the function to get initial state and global reducer\n  const [mainState, mainReducer] = useMemo(() => combineReducers(reducers, initialState), [\n    reducers,\n    initialState,\n  ])\n\n  // setup useReducer with the returned values of the combineReducers\n  const [state, dispatch] = useReducer(mainReducer, mainState, initializer)\n\n  const augmentedDispatch = useMemo(() => augmentDispatch(dispatch, state), [state])\n\n  // Update store object to potentially access it outside of a component\n  useEffect(() => {\n    if (!store.isReady) {\n      store.isReady = true\n      store.dispatch = augmentedDispatch\n      store.getState = () => state\n      // Object.freeze(store) // don't freeze the object, or store.isReady can't be re-assigned\n    }\n    return () => {\n      store.isReady = false\n    }\n  }, [augmentedDispatch])\n\n   // make our context object value\n  const contextValue = useMemo(() => ({ state, dispatch: augmentedDispatch }), [\n    state,\n    augmentedDispatch,\n  ])\n\n  return <StateProvider.Provider value={contextValue}>{children}</StateProvider.Provider>\n}\n\nContextProvider.propTypes = {\n  reducers: PropTypes.oneOfType([PropTypes.objectOf(PropTypes.func.isRequired), PropTypes.func])\n    .isRequired,\n  initialState: PropTypes.object,\n  initializer: PropTypes.func,\n  persistKey: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n}\n\nContextProvider.defaultProps = {\n  initializer: defaultInitializer,\n}\n\nexport { ContextProvider, StateProvider as ContextConsumer, store, storeFactory }\n","/Users/nathanfoster/repos/tree-of-life/src/store/hooks/index.js",["103"],"import {\n  useContext as reactUseContext,\n  useState,\n  useRef,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n} from 'react'\nimport { ContextConsumer } from '../provider'\nimport { shallowEquals } from '../utils'\n\nconst useContext = (context = ContextConsumer) => reactUseContext(context)\n\nconst usePrevious = value => {\n  let ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nconst defaultIsEqual = (nextSelector, previousSelector) =>\n  shallowEquals(previousSelector, nextSelector)\n\nconst useSelector = (context, mapStateToSelector, isEqual = defaultIsEqual) => {\n  const { state } = useContext(context)\n\n  const [selector, setSelector] = useState(mapStateToSelector(state))\n\n  const previousSelector = usePrevious(selector)\n\n  useLayoutEffect(() => {\n    if (previousSelector) {\n      const nextSelector = mapStateToSelector(state)\n      const shouldUpdate = !isEqual(nextSelector, previousSelector)\n      if (shouldUpdate) {\n        setSelector(nextSelector)\n      }\n    }\n  }, [state])\n\n  return selector\n}\n\nconst useDispatch = (context = ContextConsumer) => {\n  const { dispatch } = useContext(context)\n  const memoizedDispatch = useMemo(() => dispatch, [dispatch])\n\n  return memoizedDispatch\n}\n\nexport { useSelector, useDispatch, useContext, usePrevious }\n","/Users/nathanfoster/repos/tree-of-life/src/store/utils/index.js",["104","105"],"import actionTypes from './actionTypes'\nimport { combineReducers } from './combineReducers'\nimport isPlainObject from './isPlainObject'\nimport shallowEquals from './shallowEquals'\n\nconst isAFunction = object => object instanceof Function || typeof object === 'function'\n\nconst isQuotaExceeded = e => {\n  let quotaExceeded = false\n  if (e) {\n    if (e.code) {\n      switch (e.code) {\n        case 22:\n          quotaExceeded = true\n          break\n        case 1014:\n          // Firefox\n          if (e.name == 'NS_ERROR_DOM_QUOTA_REACHED') {\n            quotaExceeded = true\n          }\n          break\n        default:\n          break\n      }\n    } else if (e.number == -2147024882) {\n      // Internet Explorer 8\n      quotaExceeded = true\n    }\n  }\n  return quotaExceeded\n}\n\nexport { actionTypes, combineReducers, isPlainObject, isAFunction, isQuotaExceeded, shallowEquals }\n","/Users/nathanfoster/repos/tree-of-life/src/store/utils/actionTypes.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/utils/shallowEquals.js",["106"],"const shallowEquals = (a, b) => {\n  if (a === b) return true\n  if (!(a || b)) return true\n  // if ((!a && b) || (!b && a)) return false;\n\n  for (var key in a) {\n    if (!(key in b) || a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  for (var key in b) {\n    if (!(key in a) || a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport default shallowEquals\n","/Users/nathanfoster/repos/tree-of-life/src/store/utils/isPlainObject.js",[],"/Users/nathanfoster/repos/tree-of-life/src/store/utils/combineReducers.js",[],"/Users/nathanfoster/repos/tree-of-life/src/components/index.js",[],"/Users/nathanfoster/repos/tree-of-life/src/components/Footer/index.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":6,"column":14,"nodeType":"113","messageId":"114","endLine":6,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":15,"column":26,"nodeType":"113","messageId":"114","endLine":15,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":24},{"ruleId":"115","severity":1,"message":"119","line":8,"column":17,"nodeType":"117","messageId":"118","endLine":8,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":67,"column":6,"nodeType":"122","endLine":67,"endColumn":13,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":77,"column":5,"nodeType":"122","endLine":77,"endColumn":19,"suggestions":"125"},{"ruleId":"120","severity":1,"message":"126","line":92,"column":6,"nodeType":"122","endLine":92,"endColumn":30,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"128","line":50,"column":6,"nodeType":"122","endLine":50,"endColumn":25,"suggestions":"129"},{"ruleId":"120","severity":1,"message":"130","line":42,"column":6,"nodeType":"122","endLine":42,"endColumn":13,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":18,"column":22,"nodeType":"134","messageId":"114","endLine":18,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":25,"column":25,"nodeType":"134","messageId":"114","endLine":25,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":12,"column":12,"nodeType":"117","messageId":"137","endLine":12,"endColumn":15},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'AppActionTypes' is defined but never used.","Identifier","unusedVar","'payload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has missing dependencies: 'ownProps' and 'prevStateToProps'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useMemo has missing dependencies: 'dispatch', 'ownProps', and 'state'. Either include them or remove the dependency array.",["141"],"React Hook useMemo has a missing dependency: 'dispatchToProps'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["143"],"React Hook useLayoutEffect has missing dependencies: 'isEqual', 'mapStateToSelector', and 'previousSelector'. Either include them or remove the dependency array. If 'mapStateToSelector' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-redeclare","'key' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [ownProps, prevStateToProps, state]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatch, ownProps, state]",{"range":"157","text":"158"},"Update the dependencies array to be: [stateToProps, ownProps, dispatchToProps]",{"range":"159","text":"160"},"Update the dependencies array to be: [augmentedDispatch, state]",{"range":"161","text":"162"},"Update the dependencies array to be: [isEqual, mapStateToSelector, previousSelector, state]",{"range":"163","text":"164"},[2014,2021],"[ownProps, prevStateToProps, state]",[2351,2365],"[dispatch, ownProps, state]",[2808,2832],"[stateToProps, ownProps, dispatchToProps]",[1599,1618],"[augmentedDispatch, state]",[1018,1025],"[isEqual, mapStateToSelector, previousSelector, state]"]